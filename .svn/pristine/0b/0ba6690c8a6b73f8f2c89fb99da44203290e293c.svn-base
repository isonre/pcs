<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
										  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
										  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
										  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
		                                  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
   
    <bean id="cacheManager" class="com.yunforge.common.cache.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.yunforge.core.security.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>	 

	<bean id="userRealm" class="com.yunforge.core.security.UserRealm">
		<property name="authorizationCacheName" value="authorizationCache" />
		<property name="credentialsMatcher" ref="passwordMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authorizationCachingEnabled" value="true"/>      
		<!--
		<property name="credentialsMatcher">
            <bean class="com.yunforge.auth.security.CustomCredentialsMatcher">
                <constructor-arg ref="shiroCacheManager"/>
                <property name="hashAlgorithmName" value="MD5"/>
            </bean>
        </property>
        -->
	</bean>
	
	<bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher">
		<property name="passwordService" ref="passwordService" />
	</bean>

	<bean id="passwordService"
		class="org.apache.shiro.authc.credential.DefaultPasswordService">
		<property name="hashService" ref="hashService" />
	</bean>

	<bean id="hashService" class="org.apache.shiro.crypto.hash.DefaultHashService">
		<property name="hashAlgorithmName" value="MD5" />
	</bean>
    
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/> 

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

     <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    	
	<!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
   <bean id="sysUserFilter" class="com.yunforge.core.security.SysUserFilter"/>

   <bean id="authcFilter" class="com.yunforge.core.security.AgrimsFormAuthenticationFilter">  
		<property name="usernameParam" value="username"/>  
		<property name="passwordParam" value="password"/>  
		<property name="rememberMeParam" value="rememberMe"/>  
		<property name="failureKeyAttribute" value="shiroLoginFailure"/>  
	</bean>
	  
    <bean id="mobileAuthcFilter" class="com.yunforge.core.security.MobileAuthenticationFilter"/> 
   
	<bean id="jCaptchaValidateFilter" class="com.yunforge.core.captcha.JCaptchaValidateFilter">  
		<property name="jcaptchaEbabled" value="false"/>  
		<property name="jcaptchaParam" value="captcha"/>  
		<property name="failureKeyAttribute" value="shiroLoginFailure"/>  
	</bean>
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<!--
		<property name="successUrl" value="/index.jsp" />
		<property name="unauthorizedUrl" value="/login" />
		-->
		<property name="filters">
			<map>  
				<entry key="authc" value-ref="authcFilter"/>
				<entry key="sysUser"  value-ref="sysUserFilter"/>
				<entry key="mobileAuthc"  value-ref="mobileAuthcFilter"/>			
				<entry key="jCaptchaValidate" value-ref="jCaptchaValidateFilter"/>  
			</map> 
		</property>
		<property name="filterChainDefinitions">
			<value>
				/division/getNameByCode/**=anon
				/office/task/getSubUserName/**=anon
				/office/task/uploadTaskByEthink/**=anon
				/office/task/saveTaskByEthink/**=anon
				/office/file/download/**=anon
				/services/**=anon
				/favicon.ico**=anon
				/assets/**=anon
				/jcaptcha* = anon
				/login =  jCaptchaValidate,authc
				/logout = logout
				/main/** = anon
				/authenticated* = anon
				/setup/** = anon
				
				
				/api/login/** =anon
				/api/cms/info/** =anon
				/api/** = mobileAuthc
				
				/** = authc,sysUser
			</value>
		</property>
	</bean>
	
	<!-- Shiro生命周期处理器 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!--Spring MVC Shiro Config -->
	<!-- AOP式方法级权限检查 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="false" />
	</bean>

	<bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>
